API_TWITTER_BEARER_TOKEN=''
APP_DEBUG='false'
APP_ENV=prod
APP_SECRET=''
# Twitter API
API_TWITTER_CONSUMER_KEY=
API_TWITTER_CONSUMER_SECRET=
API_TWITTER_USER_TOKEN=
API_TWITTER_USER_SECRET=
API_TWITTER_VERSION=
# application performance profiling with blackfire.io
BLACKFIRE_CLIENT_ID=
BLACKFIRE_CLIENT_TOKEN=
BLACKFIRE_CONFIG="/dev/null"
BLACKFIRE_MEMORY_LIMIT=
BLACKFIRE_SERVER_ID=
BLACKFIRE_SERVER_TOKEN=
BLACKFIRE_SOCKET="unix:///var/www/org.example.worker/var/home/agent.sock"
BLACKFIRE_LOG_LEVEL=1
BLACKFIRE_LOG_FILE="/var/www/org.example.worker/var/log/blackfire.log"
# docker compose project name
COMPOSE_PROJECT_NAME='org_example_worker'
# PHP dependencies cache
COMPOSER_HOME='/var/www/org.example.worker/var/home/composer'
# Assign a truthy value when dependencies have to be updated
COMPOSER_UPDATE_DEPS=1
DATABASE_URL=postgresql://:@:5432/?serverVersion=14&charset=utf8
# monitoring
DD_AGENT_HOST=''
DD_APPSEC_ENABLED=false
DD_ENV='prod'
DD_PROFILING_ENABLED=false
DD_SERVICE='org.example.worker'
DD_TRACE_CLI_ENABLED=true
DD_TRACE_ENABLED=true
DD_VERSION='__VERSION__'
# Firebase params
FIREBASE_SERVICE_ACCOUNT_CONFIG=
FIREBASE_DATABASE_URI=
# Trigger container image rebuild by setting DEBUG to 1
DEBUG=
# GitHub API access token
GITHUB_API_TOKEN=
# public Twitter List
LIST_NAME=''
# Worker memory limit
MEMORY_LIMIT=
# AMQP
MESSENGER_TRANSPORT_DSN_PUBLICATIONS=
MESSENGER_TRANSPORT_DSN_FAILURES=
# comma-separated public Twitter Lists
# conflicts with LIST_NAME
MULTIPLE_LISTS=''
# parameters used in development, testing, continuous integration
POSTGRES_DB=
POSTGRES_HOST_AUTH_METHOD='scram-sha-256'
POSTGRES_INITDB_ARGS='--auth-host=scram-sha-256'
POSTGRES_PASSWORD=
POSTGRES_USER=
# A public Twitter List
PUBLISHERS_LIST_DEFAULT=
# pm2.io
PM2_PUBLIC_KEY=XXX
PM2_SECRET_KEY=YYY
KEYMETRICS_PUBLIC=
KEYMETRICS_SECRET=
# AMQP
RABBITMQ_DEFAULT_USER=
RABBITMQ_DEFAULT_PASS=
RABBITMQ_DEFAULT_VHOST=
# PHP workers consuming AMQP messages
TOTAL_WORKERS=
# Twitter username
USERNAME=''
# COMPOSER_HOME=/var/www/${WORKER}/var/composer
WORKER='org.example.worker'
# continuous deployment
WORKER_OWNER_UID=
WORKER_OWNER_GID=
