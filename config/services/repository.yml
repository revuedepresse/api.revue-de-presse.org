services:
    App\Twitter\Infrastructure\Repository\Membership\MemberRepository:
        class: 'App\Twitter\Infrastructure\Repository\Membership\MemberRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Membership\Domain\Entity\Legacy\Member'
        calls:
            - [ 'setLogger', [ '@logger'] ]
        properties:
            membersListRepository: '@App\Ownership\Infrastructure\Repository\MembersListRepository'
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Domain\Membership\Repository\MemberRepositoryInterface: '@App\Twitter\Infrastructure\Repository\Membership\MemberRepository'

    App\Twitter\Infrastructure\Curation\Repository\MemberFriendsCollectedEventRepository:
        class: 'App\Twitter\Infrastructure\Curation\Repository\MemberFriendsCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Domain\Curation\Entity\MemberProfileCollectedEvent'
        calls:
            - [ 'setLogger',           [ '@logger' ] ]
            - [ 'setApiAccessor',      [ '@App\Twitter\Infrastructure\Http\Accessor' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Infrastructure\Curation\Repository\FriendsListCollectedEventRepository:
        class: 'App\Twitter\Infrastructure\Curation\Repository\FriendsListCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Domain\Curation\Entity\FriendsListCollectedEvent'
        calls:
            - [ 'setLogger',           [ '@logger' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Infrastructure\Curation\Repository\FollowersListCollectedEventRepository:
        class: 'App\Twitter\Infrastructure\Curation\Repository\FollowersListCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Domain\Curation\Entity\FollowersListCollectedEvent'
        calls:
            - [ 'setLogger',           [ '@logger' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Infrastructure\Curation\Repository\MemberProfileCollectedEventRepository:
        class: 'App\Twitter\Infrastructure\Curation\Repository\MemberProfileCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Domain\Curation\Entity\MemberProfileCollectedEvent'
        calls:
            - [ 'setLogger',           [ '@logger' ] ]
            - [ 'setApiAccessor',      [ '@App\Twitter\Infrastructure\Http\Accessor' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Ownership\Domain\Repository\MembersListRepositoryInterface:
        public: true
        class:  'App\Ownership\Infrastructure\Repository\MembersListRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Ownership\Domain\Entity\MembersList'
        calls:
            - [ 'setLogger',                    [ '@logger' ] ]
            - [ 'setStatusRepository',          [ '@App\Twitter\Infrastructure\Http\Repository\StatusRepository' ] ]
            - [ 'setTimelyStatusRepository',    [ '@repository.timely_status' ] ]
            - [ 'setTokenRepository',           [ '@repository.access_token' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Ownership\Infrastructure\Repository\MembersListRepository:
        '@App\Ownership\Domain\Repository\MembersListRepositoryInterface'

    App\Twitter\Infrastructure\Publication\Repository\PublicationRepository:
        class: 'App\Twitter\Infrastructure\Publication\Repository\PublicationRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Domain\Publication\Entity\Publication'
        calls:
            - [ 'setEntityManager', [ '@doctrine.orm.entity_manager' ] ]
            - [ 'setPublicationFormatter', [ '@App\Twitter\Infrastructure\Publication\Formatter\PublicationFormatter' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    repository.access_token:
        class: 'App\Twitter\Infrastructure\Http\AccessToken\Repository\TokenRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Http\Entity\Token'
        calls:
            - [ 'setLogger', [ '@logger' ] ]

    repository.member_aggregate_subscription:
        class: 'App\Trends\Infrastructure\Repository\MemberAggregateSubscriptionRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Trends\Domain\Entity\MemberAggregateSubscription'

    repository.keyword:
        class: 'App\Twitter\Infrastructure\Publication\Repository\KeywordRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Domain\Curation\Entity\Keyword'

    repository.highlight:
        class: 'App\Twitter\Infrastructure\Publication\Repository\HighlightRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Domain\Curation\Entity\Highlight'
        calls:
            - [ 'setLogger',  [ '@logger' ] ]
            - [ 'setStatusAccessor', [ '@App\Twitter\Infrastructure\Http\Accessor\StatusAccessor'] ]
            - [ 'setStatusRepository', [ '@App\Twitter\Infrastructure\Http\Repository\StatusRepository'] ]
        properties:
            adminRouteName: '%admin_route_name%'

    repository.not_found_status:
        class: 'App\Twitter\Infrastructure\Publication\Repository\NotFoundStatusRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Domain\Curation\Entity\NotFoundStatus'

    repository.timely_status:
        class: 'App\Trends\Infrastructure\Repository\TimelyStatusRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Trends\Domain\Entity\TimelyStatus'
        calls:
            - [ 'setStatusAccessor',    [ '@App\Twitter\Infrastructure\Http\Accessor\StatusAccessor'] ]
            - [ 'setStatusRepository',  [ '@App\Twitter\Infrastructure\Http\Repository\StatusRepository'] ]

    repository.saved_search:
        class: 'App\Trends\Infrastructure\Repository\SavedSearchRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Trends\Domain\Entity\SavedSearch'

    repository.search_matching_status:
        class: 'App\Trends\Infrastructure\Repository\SearchMatchingStatusRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Trends\Domain\Entity\SearchMatchingStatus'
        properties:
            statusRepository: '@App\Twitter\Infrastructure\Http\Repository\StatusRepository'
            logger:           "@logger"

    repository.whisperer:
        class: 'App\Twitter\Infrastructure\Http\Repository\WhispererRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Http\Entity\Whisperer'

    App\Trends\Infrastructure\Repository\PopularPublicationRepository:
        class: 'App\Trends\Infrastructure\Repository\PopularPublicationRepository'
        arguments:
            - "%kernel.project_dir%/config/%env(resolve:FIREBASE_SERVICE_ACCOUNT_CONFIG)%"
            - "%env(resolve:FIREBASE_DATABASE_URI)%"
            - '%list_default%'
            - '@repository.highlight'
            - '@App\Ownership\Domain\Repository\MembersListRepositoryInterface'
            - '@logger'
