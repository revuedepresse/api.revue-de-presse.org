parameters:

    weaving_the_web_api.entity.token.class:         'App\Infrastructure\Api\Entity\Token'
    weaving_the_web_api.entity.whisperer.class:     'App\Infrastructure\Api\Entity\Whisperer'

services:
    App\Infrastructure\Repository\Membership\MemberRepository:
        class: 'App\Infrastructure\Repository\Membership\MemberRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Membership\Domain\Entity\Legacy\Member'
        calls:
            - [ 'setLogger', [ '@logger'] ]
        properties:
            aggregateRepository: '@App\Infrastructure\Api\Repository\PublicationListRepository'
        tags:
            - { name: 'doctrine.repository_service' }

    App\Infrastructure\Collection\Repository\MemberFriendsCollectedEventRepository:
        class: 'App\Infrastructure\Collection\Repository\MemberFriendsCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Domain\Collection\Entity\MemberProfileCollectedEvent'
        calls:
            - [ 'setLogger',           [ '@logger' ] ]
            - [ 'setApiAccessor',      [ '@App\Twitter\Api\Accessor' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Infrastructure\Collection\Repository\FriendsListCollectedEventRepository:
        class: 'App\Infrastructure\Collection\Repository\FriendsListCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Domain\Collection\Entity\FriendsListCollectedEvent'
        calls:
            - [ 'setLogger',           [ '@logger' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Infrastructure\Collection\Repository\FollowersListCollectedEventRepository:
        class: 'App\Infrastructure\Collection\Repository\FollowersListCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Domain\Collection\Entity\FollowersListCollectedEvent'
        calls:
            - [ 'setLogger',           [ '@logger' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Infrastructure\Collection\Repository\MemberProfileCollectedEventRepository:
        class: 'App\Infrastructure\Collection\Repository\MemberProfileCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Domain\Collection\Entity\MemberProfileCollectedEvent'
        calls:
            - [ 'setLogger',           [ '@logger' ] ]
            - [ 'setApiAccessor',      [ '@App\Twitter\Api\Accessor' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Infrastructure\Collection\Repository\PublicationBatchCollectedEventRepository:
        class: 'App\Infrastructure\Collection\Repository\PublicationBatchCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Domain\Collection\Entity\PublicationBatchCollectedEvent'
        calls:
            - [ 'setLogger',           [ '@logger' ] ]
            - [ 'setMemberRepository', [ '@App\Infrastructure\Repository\Membership\MemberRepository' ] ]
            - [ 'setApiAccessor',      [ '@App\Twitter\Api\Accessor' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Infrastructure\Collection\Repository\PublicationListCollectedEventRepository:
        class: 'App\Infrastructure\Collection\Repository\PublicationListCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Domain\Collection\Entity\PublicationListCollectedEvent'
        calls:
            - [ 'setLogger',           [ '@logger' ] ]
            - [ 'setApiAccessor',      [ '@App\Twitter\Api\Accessor' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Infrastructure\Collection\Repository\OwnershipBatchCollectedEventRepository:
        class: 'App\Infrastructure\Collection\Repository\OwnershipBatchCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Domain\Collection\Entity\OwnershipBatchCollectedEvent'
        calls:
            - [ 'setLogger',           [ '@logger' ] ]
            - [ 'setApiAccessor',      [ '@App\Twitter\Api\Accessor' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Infrastructure\Api\Repository\PublicationListRepository:
        public: true
        class:  'App\Infrastructure\Api\Repository\PublicationListRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Infrastructure\Api\Entity\Aggregate'
        calls:
            - [ 'setLikedStatusRepository',     [ '@repository.liked_status' ] ]
            - [ 'setLogger',                    [ '@logger' ] ]
            - [ 'setPublicationListDispatcher', [ '@App\Infrastructure\Amqp\MessageBus\PublicationListDispatcher' ] ]
            - [ 'setStatusRepository',          [ '@App\Infrastructure\Api\Repository\StatusRepository' ] ]
            - [ 'setTimelyStatusRepository',    [ '@repository.timely_status' ] ]
            - [ 'setTokenRepository',           [ '@repository.access_token' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Repository\PublicationRepository:
        class: 'App\Twitter\Repository\PublicationRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Entity\Publication'
        calls:
            - [ 'setEntityManager', [ '@doctrine.orm.entity_manager' ] ]
            - [ 'setPublicationFormatter', [ '@App\Infrastructure\Publication\Formatter\PublicationFormatter' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    repository.access_token:
        class: '%repository.access_token.class%'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - '%weaving_the_web_api.entity.token.class%'
        calls:
            - [ 'setLogger', [ '@logger' ] ]

    repository.publication_list_subscription:
        class:      'App\Membership\Infrastructure\Repository\AggregateSubscriptionRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Membership\Domain\Entity\AggregateSubscription'
        properties:
            accessor:                               '@App\Twitter\Api\Accessor'
            logger:                                 '@logger'
            memberAggregateSubscriptionRepository:  '@repository.member_aggregate_subscription'
            memberSubscriptionRepository:           '@repository.member_subscription'
            networkRepository:                      '@repository.network'

    repository.authentication_token:
        factory: [ '@doctrine.orm.entity_manager', 'getRepository' ]
        class:   'App\Membership\Infrastructure\Repository\AuthenticationTokenRepository'
        arguments:
            - 'App\Membership\Domain\Entity\AuthenticationToken'
        properties:
            memberRepository: "@user_manager"
            authenticator:    "@app.authenticator"

    repository.owner:
        factory: [ '@doctrine.orm.entity_manager', 'getRepository' ]
        class: 'App\PressMedia\Repository\OwnerRepository'
        arguments:
            - 'App\PressMedia\Entity\Owner'
        properties:
            logger: '@logger'

    repository.media:
        factory: [ '@doctrine.orm.entity_manager', 'getRepository' ]
        class: 'App\PressMedia\Repository\MediaRepository'
        arguments:
            - 'App\PressMedia\Entity\Media'
        properties:
            logger: '@logger'

    repository.member_aggregate_subscription:
        factory: [ '@doctrine.orm.entity_manager', 'getRepository' ]
        class: 'App\PublicationList\Repository\MemberAggregateSubscriptionRepository'
        arguments:
            - 'App\PublicationList\Entity\MemberAggregateSubscription'

    repository.keyword:
        class: 'App\Infrastructure\Publication\Repository\KeywordRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Domain\Publication\Entity\Keyword'

    repository.highlight:
        class: 'App\Infrastructure\Publication\Repository\HighlightRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Domain\Publication\Entity\Highlight'
        calls:
            - [ 'setLogger',  [ '@logger' ] ]
            - [ 'setStatusAccessor', [ '@App\Infrastructure\Twitter\Api\Accessor\StatusAccessor'] ]
            - [ 'setStatusRepository', [ '@App\Infrastructure\Api\Repository\StatusRepository'] ]
        properties:
            aggregate:      '%highlight_aggregate_default%'
            adminRouteName: '%admin_route_name%'

    repository.not_found_status:
        class: 'App\Infrastructure\Publication\Repository\NotFoundStatusRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Domain\Publication\Entity\NotFoundStatus'

    repository.timely_status:
        class: 'App\PublicationList\Repository\TimelyStatusRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\PublicationList\Entity\TimelyStatus'
        calls:
            - [ 'setStatusAccessor',    [ '@App\Infrastructure\Twitter\Api\Accessor\StatusAccessor'] ]
            - [ 'setStatusRepository',  [ '@App\Infrastructure\Api\Repository\StatusRepository'] ]

    repository.network:
        class:                            'App\Membership\Infrastructure\Repository\NetworkRepository'
        properties:
            accessor:                     '@App\Twitter\Api\Accessor'
            entityManager:                "@doctrine.orm.entity_manager"
            logger:                       "@logger"
            memberRepository:             "@user_manager"
            memberSubscribeeRepository:   "@repository.member_subscribee"
            memberSubscriptionRepository: "@repository.member_subscription"

    repository.saved_search:
        class: 'App\PublicationList\Repository\SavedSearchRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\PublicationList\Entity\SavedSearch'

    repository.search_matching_status:
        class: 'App\PublicationList\Repository\SearchMatchingStatusRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\PublicationList\Entity\SearchMatchingStatus'
        properties:
            statusRepository: '@App\Infrastructure\Api\Repository\StatusRepository'
            logger:           "@logger"

    repository.liked_status:
        class: 'App\Infrastructure\Publication\Repository\LikedStatusRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Domain\Publication\Entity\LikedStatus'
        properties:
            memberRepository: "@user_manager"
            statusRepository: '@App\Infrastructure\Api\Repository\StatusRepository'

    repository.member_subscription:
        class: 'App\Membership\Infrastructure\Repository\MemberSubscriptionRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Membership\Domain\Entity\MemberSubscription'
        properties:
            memberRepository: "@user_manager"

    repository.member_subscribee:
        class: 'App\Membership\Infrastructure\Repository\MemberSubscribeeRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Membership\Domain\Entity\MemberSubscribee'
        properties:
            memberRepository: "@user_manager"

    repository.whisperer:
        class: '%repository.whisperer.class%'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - '%weaving_the_web_api.entity.whisperer.class%'
