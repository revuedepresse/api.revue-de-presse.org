services:
    App\Membership\Infrastructure\Repository\MemberRepository:
        class: 'App\Membership\Infrastructure\Repository\MemberRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Membership\Infrastructure\Entity\Legacy\Member'
        calls:
            - [ 'setLogger', [ '@logger'] ]
        properties:
            aggregateRepository: '@App\Twitter\Infrastructure\Http\Repository\PublishersListRepository'
        tags:
            - { name: 'doctrine.repository_service' }

    App\Membership\Domain\Repository\MemberRepositoryInterface: '@App\Membership\Infrastructure\Repository\MemberRepository'

    user_manager: '@App\Membership\Infrastructure\Repository\MemberRepository'

    App\Twitter\Infrastructure\Curation\Repository\MemberFriendsCollectedEventRepository:
        class: 'App\Twitter\Infrastructure\Curation\Repository\MemberFriendsCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Curation\Entity\MemberProfileCollectedEvent'
        calls:
            - [ 'setLogger',           [ '@logger' ] ]
            - [ 'setHttpClient',      [ '@App\Twitter\Domain\Http\Client\HttpClientInterface' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Infrastructure\Curation\Repository\FriendsListCollectedEventRepository:
        class: 'App\Twitter\Infrastructure\Curation\Repository\FriendsListCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Curation\Entity\FriendsListCollectedEvent'
        calls:
            - [ 'setLogger',           [ '@logger' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Infrastructure\Curation\Repository\FollowersListCollectedEventRepository:
        class: 'App\Twitter\Infrastructure\Curation\Repository\FollowersListCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Curation\Entity\FollowersListCollectedEvent'
        calls:
            - [ 'setLogger',           [ '@logger' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Infrastructure\Curation\Repository\MemberProfileCollectedEventRepository:
        class: 'App\Twitter\Infrastructure\Curation\Repository\MemberProfileCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Curation\Entity\MemberProfileCollectedEvent'
        calls:
            - [ 'setLogger',        [ '@logger' ] ]
            - [ 'setHttpClient',    [ '@App\Twitter\Domain\Http\Client\HttpClientInterface' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Infrastructure\Curation\Repository\TweetsBatchCollectedEventRepository:
        class: 'App\Twitter\Infrastructure\Curation\Repository\TweetsBatchCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Curation\Entity\PublicationBatchCollectedEvent'
        calls:
            - [ 'setLogger',           [ '@logger' ] ]
            - [ 'setMemberRepository', [ '@App\Membership\Infrastructure\Repository\MemberRepository' ] ]
            - [ 'setHttpClient',      [ '@App\Twitter\Domain\Http\Client\HttpClientInterface' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Infrastructure\Curation\Repository\TwitterListCollectedEventRepository:
        class: 'App\Twitter\Infrastructure\Curation\Repository\TwitterListCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Curation\Entity\PublishersListCollectedEvent'
        calls:
            - [ 'setLogger',           [ '@logger' ] ]
            - [ 'setHttpClient',      [ '@App\Twitter\Domain\Http\Client\HttpClientInterface' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Infrastructure\Curation\Repository\ListsBatchCollectedEventRepository:
        class: 'App\Twitter\Infrastructure\Curation\Repository\ListsBatchCollectedEventRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Curation\Entity\OwnershipBatchCollectedEvent'
        calls:
            - [ 'setLogger',           [ '@logger' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Domain\Curation\Repository\ListsBatchCollectedEventRepositoryInterface:
      '@App\Twitter\Infrastructure\Curation\Repository\ListsBatchCollectedEventRepository'

    App\Twitter\Infrastructure\Http\Repository\PublishersListRepository:
        public: true
        class: 'App\Twitter\Infrastructure\Http\Repository\PublishersListRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Publication\Entity\PublishersList'
        calls:
            - [ 'setLogger',                    [ '@logger' ] ]
            - [ 'setPublishersListDispatcher',  [ '@App\Twitter\Infrastructure\Amqp\MessageBus\PublishersListDispatcher' ] ]
            - [ 'setStatusRepository',          [ '@App\Twitter\Infrastructure\Http\Repository\StatusRepository' ] ]
            - [ 'setTimelyStatusRepository',    [ '@repository.timely_status' ] ]
            - [ 'setTokenRepository',           [ '@App\Twitter\Domain\Http\AccessToken\Repository\TokenRepositoryInterface' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Domain\Publication\Repository\PublishersListRepositoryInterface: '@App\Twitter\Infrastructure\Http\Repository\PublishersListRepository'

    App\Twitter\Infrastructure\Publication\Repository\PublicationRepository:
        class: 'App\Twitter\Infrastructure\Publication\Repository\PublicationRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Publication\Entity\Publication'
        calls:
            - [ 'setEntityManager', [ '@doctrine.orm.entity_manager' ] ]
            - [ 'setPublicationFormatter', [ '@App\Twitter\Infrastructure\Publication\Formatter\PublicationFormatter' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Infrastructure\Http\AccessToken\Repository\TokenRepository:
        class: 'App\Twitter\Infrastructure\Http\AccessToken\Repository\TokenRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Http\Entity\Token'
            - '@App\Twitter\Domain\Http\Repository\TokenTypeRepositoryInterface'
            - '%app.twitter_api.consumer_key%'
            - '%app.twitter_api.consumer_secret%'
        calls:
            - [ 'setLogger', [ '@logger' ] ]
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Domain\Http\AccessToken\Repository\TokenRepositoryInterface:
        '@App\Twitter\Infrastructure\Http\AccessToken\Repository\TokenRepository'

    App\Membership\Infrastructure\Repository\AggregateSubscriptionRepository:
        class: 'App\Membership\Infrastructure\Repository\AggregateSubscriptionRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Membership\Infrastructure\Entity\AggregateSubscription'
        properties:
            accessor: '@App\Twitter\Domain\Http\Client\HttpClientInterface'
            logger:                                 '@logger'
            memberAggregateSubscriptionRepository:  '@App\Twitter\Infrastructure\PublishersList\Repository\MemberAggregateSubscriptionRepository'
            memberSubscriptionRepository:           '@repository.member_subscription'
            networkRepository:                      '@App\Membership\Infrastructure\Repository\NetworkRepository'

    App\Membership\Domain\Repository\PublishersListSubscriptionRepositoryInterface:
        '@App\Membership\Infrastructure\Repository\AggregateSubscriptionRepository'

    repository.owner:
        class: 'App\FrenchMediaShareholders\Repository\OwnerRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\FrenchMediaShareholders\Entity\Owner'
        properties:
            logger: '@logger'
        tags:
            - { name: 'doctrine.repository_service' }

    repository.media:
        class: 'App\FrenchMediaShareholders\Repository\MediaRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\FrenchMediaShareholders\Entity\Media'
        properties:
            logger: '@logger'
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Infrastructure\PublishersList\Repository\MemberAggregateSubscriptionRepository:
        class: 'App\Twitter\Infrastructure\PublishersList\Repository\MemberAggregateSubscriptionRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\PublishersList\Entity\MemberAggregateSubscription'
        tags:
            - { name: 'doctrine.repository_service' }

    repository.keyword:
        class: 'App\Twitter\Infrastructure\Publication\Repository\KeywordRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Curation\Entity\Keyword'

    repository.highlight:
        class: 'App\Twitter\Infrastructure\Publication\Repository\HighlightRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Curation\Entity\Highlight'
        calls:
            - [ 'setLogger',            [ '@logger' ] ]
            - [ 'setTweetAwareHttpClient',    [ '@App\Twitter\Infrastructure\Http\Client\TweetAwareHttpClient'] ]
            - [ 'setStatusRepository',  [ '@App\Twitter\Infrastructure\Http\Repository\StatusRepository'] ]
        properties:
            twitterList:                '%publishers_list_default%'

    repository.not_found_status:
        class: 'App\Twitter\Infrastructure\Publication\Repository\NotFoundStatusRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Curation\Entity\NotFoundStatus'

    repository.timely_status:
        class: 'App\Twitter\Infrastructure\PublishersList\Repository\TimelyStatusRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\PublishersList\Entity\TimelyStatus'
        calls:
            - [ 'setTweetAwareHttpClient',    [ '@App\Twitter\Infrastructure\Http\Client\TweetAwareHttpClient'] ]
            - [ 'setStatusRepository',  [ '@App\Twitter\Infrastructure\Http\Repository\StatusRepository'] ]

    App\Membership\Infrastructure\Repository\NetworkRepository:
        class: 'App\Membership\Infrastructure\Repository\NetworkRepository'
        properties:
            accessor: '@App\Twitter\Domain\Http\Client\HttpClientInterface'
            entityManager:                "@doctrine.orm.entity_manager"
            logger:                       "@logger"
            memberRepository:             "@user_manager"
            memberSubscribeeRepository:   "@repository.member_subscribee"
            memberSubscriptionRepository: "@repository.member_subscription"

    App\Membership\Domain\Repository\NetworkRepositoryInterface:
        '@App\Membership\Infrastructure\Repository\NetworkRepository'

    repository.member_subscription:
        class: 'App\Membership\Infrastructure\Repository\MemberSubscriptionRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Membership\Infrastructure\Entity\MemberSubscription'
        properties:
            memberRepository: "@user_manager"

    repository.member_subscribee:
        class: 'App\Membership\Infrastructure\Repository\MemberSubscribeeRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Membership\Infrastructure\Entity\MemberSubscribee'
        properties:
            memberRepository: "@user_manager"

    repository.whisperer:
        class: 'App\Twitter\Infrastructure\Http\Repository\WhispererRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Http\Entity\Whisperer'
