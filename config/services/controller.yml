services:
    controller.authentication:
        public: true
        class: 'App\Member\Authentication\Controller\AuthenticationController'
        properties:
            authenticator:        '@app.authenticator'

    controller.healthcheck:
        class: 'App\Healthcheck\Controller\HealthcheckController'
        properties:
            allowedOrigin:                  '%allowed.origin%'
            environment:                    '%kernel.environment%'

    controller.list:
        public: true
        class: 'App\Aggregate\Controller\ListController'
        calls:
            - [ 'setPublicationListDispatcher', ['@App\Amqp\Command\FetchPublicationMessageDispatcher']]
        properties:
            allowedOrigin:                  '%allowed.origin%'
            configDirectory:                '%kernel.project_dir%/config'
            authenticationTokenRepository:  '@repository.authentication_token'
            aggregateRepository:            '@repository.publication_list'
            environment:                    '%kernel.environment%'
            highlightRepository:            '@repository.highlight'
            logger:                         '@logger'
            memberRepository:               '@user_manager'
            router:                         '@router'
            redisCache:                     '@app.cache.redis'
            timelyStatusRepository:         '@repository.timely_status'
            tokenRepository:                '@repository.access_token'

    controller.logged_in_member:
        public: true
        class: 'App\Member\Controller\LoggedInMemberController'
        properties:
            logger:                        '@logger'
            authenticationTokenRepository: '@repository.authentication_token'
            allowedOrigin:                 '%allowed.origin%'
            environment:                   '%kernel.environment%'

    controller.aggregate:
        public: true
        class: 'App\Aggregate\Controller\AggregateController'
        properties:
            aggregateRepository: '@repository.publication_list'
            allowedOrigin:       '%allowed.origin%'
            environment:         '%kernel.environment%'
            redisCache:          '@app.cache.redis'

    controller.keyword:
        public: true
        class: 'App\Aggregate\Controller\KeywordController'
        properties:
            keywordRepository: '@repository.keyword'
            allowedOrigin:     '%allowed.origin%'
            environment:       '%kernel.environment%'
            redisCache:        '@app.cache.redis'

    controller.subscription:
        class: 'App\Infrastructure\Subscription\Controller\SubscriptionController'
        properties:
            allowedOrigin:                  '%allowed.origin%'
            environment:                    '%kernel.environment%'
            httpAuthenticator:              '@app.security.http_authenticator'
            logger:                         '@monolog.logger.membership'
            memberRepository:               '@user_manager'
            memberSubscriptionRepository:   '@repository.member_subscription'
            messagePublisher:               '@status_collection.message_publisher'
            redisCache:                     '@app.cache.redis'
            tokenRepository:                '@repository.access_token'
