services:
    controller.authentication:
        public: true
        class: 'App\Member\Authentication\Controller\AuthenticationController'
        properties:
            authenticator: '@app.authenticator'

    controller.healthcheck:
        public: true
        class: 'App\Infrastructure\Healthcheck\Controller\HealthcheckController'
        arguments:
            - '%allowed.origin%'
            - '%kernel.environment%'

    controller.list:
        public: true
        class: 'App\Aggregate\Controller\ListController'
        arguments:
            - '%allowed.origin%'
            - '%kernel.environment%'
        calls:
            - [ 'setPublicationListDispatcher', ['@App\Infrastructure\Amqp\MessageBus\PublicationListDispatcher']]
        properties:
            configDirectory:                '%kernel.project_dir%/config'
            authenticationTokenRepository:  '@repository.authentication_token'
            aggregateRepository:            '@App\Api\Repository\PublicationListRepository'
            highlightRepository:            '@repository.highlight'
            logger:                         '@logger'
            memberRepository:               '@user_manager'
            router:                         '@router'
            redisCache:                     '@app.cache.redis'
            timelyStatusRepository:         '@repository.timely_status'
            tokenRepository:                '@repository.access_token'

    controller.logged_in_member:
        public: true
        class: 'App\Member\Controller\LoggedInMemberController'
        arguments:
            - '%allowed.origin%'
            - '%kernel.environment%'
        properties:
            logger:                        '@logger'
            authenticationTokenRepository: '@repository.authentication_token'

    controller.aggregate:
        public: true
        class: 'App\Aggregate\Controller\AggregateController'
        arguments:
            - '%allowed.origin%'
            - '%kernel.environment%'
        properties:
            aggregateRepository: '@App\Api\Repository\PublicationListRepository'
            redisCache:          '@app.cache.redis'

    controller.keyword:
        public: true
        class: 'App\Aggregate\Controller\KeywordController'
        arguments:
            - '%allowed.origin%'
            - '%kernel.environment%'
        properties:
            keywordRepository: '@repository.keyword'
            redisCache:        '@app.cache.redis'

    controller.member:
        public: true
        class: 'App\Infrastructure\Membership\Controller\MemberController'
        arguments:
            - '%allowed.origin%'
            - '%kernel.environment%'
        calls:
            - [ 'setLogger',   [ '@logger' ] ]
        properties:
            httpAuthenticator:      '@App\Infrastructure\Security\Authentication\HttpAuthenticator'
            memberProfileAccessor:  '@App\Infrastructure\Twitter\Api\Accessor\MemberProfileAccessor'

    controller.subscription:
        public: true
        class: 'App\Infrastructure\Subscription\Controller\SubscriptionController'
        arguments:
            - '%allowed.origin%'
            - '%kernel.environment%'
        calls:
            - [ 'setLogger',                       [ '@monolog.logger.membership' ] ]
            - [ 'setMemberSubscriptionRepository', [ '@repository.member_subscription' ] ]
            - [ 'setMemberRepository',             [ '@App\Infrastructure\Repository\Membership\MemberRepository' ] ]
            - [ 'setPublicationListDispatcher',    [ '@App\Infrastructure\Amqp\MessageBus\PublicationListDispatcher' ] ]
            - [ 'setTokenRepository',              [ '@repository.access_token' ] ]
        properties:
            httpAuthenticator:              '@App\Infrastructure\Security\Authentication\HttpAuthenticator'
            redisCache:                     '@app.cache.redis'
