imports:
    - { resource: services/_parameters.yml }
    - { resource: services/console.yml }
    - { resource: services/curation.yml }
    - { resource: services/mapping.yml }
    - { resource: services/membership.yml }
    - { resource: services/member_subscribee.yml }
    - { resource: services/member_subscription.yml }
    - { resource: services/repository.yml }
    - { resource: services/persistence.yml }
    - { resource: services/twitter_api.yml }
    - { resource: services/worker.yml }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    #    App\:
    #        resource: '../src/*'
    #        exclude: '../src/{Controler,DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    App\Twitter\Infrastructure\Log\StatusLogger:
        class: 'App\Twitter\Infrastructure\Log\StatusLogger'
        arguments:
            - '@App\Twitter\Infrastructure\Translation\Translator'
            - '@monolog.logger.twitter_api'

    App\Twitter\Infrastructure\Publication\Formatter\PublicationFormatter:
        public: true
        class: 'App\Twitter\Infrastructure\Publication\Formatter\PublicationFormatter'
        calls:
            - [ 'setTweetAwareHttpClient',   [ '@App\Twitter\Infrastructure\Http\Client\TweetAwareHttpClient' ] ]
            - [ 'setStatusRepository', [ '@App\Twitter\Infrastructure\Http\Repository\StatusRepository' ] ]

    App\Twitter\Infrastructure\Http\Repository\StatusRepository:
        class: 'App\Twitter\Infrastructure\Http\Repository\StatusRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Http\Entity\Status'
        calls:
            - [ 'setMemberRepository',       [ '@user_manager' ] ]
            - [ 'setPublicationRepository',  [ '@App\Twitter\Infrastructure\Publication\Repository\PublicationRepository' ] ]
            - [ 'setStatusLogger',           [ '@App\Twitter\Infrastructure\Log\StatusLogger' ] ]
            - [ 'setStatusPersistence',      [ '@App\Twitter\Infrastructure\Publication\Persistence\StatusPersistence' ] ]
            - [ 'setTaggedStatusRepository', [ '@App\Twitter\Infrastructure\Repository\Status\TaggedStatusRepository' ] ]
            - [ 'setTimelyStatusRepository', [ '@repository.timely_status' ] ]
        properties:
            appLogger:                '@logger'
            archivedStatusRepository: '@App\Twitter\Infrastructure\Http\Repository\ArchivedStatusRepository'
            connection:               '@doctrine.dbal.default_connection'
            registry:                 '@doctrine'
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Domain\Publication\Repository\StatusRepositoryInterface: '@App\Twitter\Infrastructure\Http\Repository\StatusRepository'

    App\Twitter\Infrastructure\Http\Repository\ArchivedStatusRepository:
        class: 'App\Twitter\Infrastructure\Http\Repository\ArchivedStatusRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Http\Entity\ArchivedStatus'
        calls:
            - [ 'setMemberRepository',       [ '@user_manager' ] ]
            - [ 'setPublicationRepository',  [ '@App\Twitter\Infrastructure\Publication\Repository\PublicationRepository' ] ]
            - [ 'setStatusLogger',           [ '@App\Twitter\Infrastructure\Log\StatusLogger' ] ]
            - [ 'setStatusPersistence',      [ '@App\Twitter\Infrastructure\Publication\Persistence\StatusPersistence' ] ]
            - [ 'setTaggedStatusRepository', [ '@App\Twitter\Infrastructure\Repository\Status\TaggedStatusRepository' ] ]
            - [ 'setTimelyStatusRepository', [ '@repository.timely_status' ] ]
        properties:
            appLogger:              '@logger'
            connection:             '@doctrine.dbal.default_connection'
            registry:               '@doctrine'

    app.twitter.repository.read.status:
        class: 'App\Twitter\Infrastructure\Http\Repository\StatusRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - 'App\Twitter\Infrastructure\Http\Entity\Status'
        calls:
            - [ 'setOauthTokens',            [ [ '%app.twitter.oauth_token.default%' ] ] ]
            - [ 'setMemberRepository',       [ '@user_manager' ] ]
            - [ 'setPublicationRepository',  [ '@App\Twitter\Infrastructure\Publication\Repository\PublicationRepository' ] ]
            - [ 'setStatusLogger',           [ '@App\Twitter\Infrastructure\Log\StatusLogger' ] ]
            - [ 'setTaggedStatusRepository', [ '@App\Twitter\Infrastructure\Repository\Status\TaggedStatusRepository' ] ]
            - [ 'setTimelyStatusRepository', [ '@repository.timely_status' ] ]
        properties:
            registry:               '@doctrine'
            statusLogger:           '@monolog.logger.twitter_api'
            connection:             '@doctrine.dbal.default_connection'

    App\Twitter\Infrastructure\Amqp\MessageBus\DispatchAmqpMessagesToFetchTweets:
        class: 'App\Twitter\Infrastructure\Amqp\MessageBus\DispatchAmqpMessagesToFetchTweets'
        arguments:
            - '@App\Twitter\Domain\Http\Client\HttpClientInterface'
            - '@App\Twitter\Infrastructure\Amqp\ResourceProcessor\PublishersListProcessor'
            - '@App\Twitter\Infrastructure\Http\AccessToken\TokenChange'
            - '@logger'
            - '@App\Twitter\Infrastructure\Translation\Translator'
        calls:
            - [ 'setRateLimitCompliance',                    [ '@App\Twitter\Infrastructure\Http\Compliance\RateLimitCompliance' ] ]
            - [ 'setOwnershipAccessor',                      [ '@App\Twitter\Domain\Http\Client\ListAwareHttpClientInterface' ] ]
            - [ 'setOwnershipBatchCollectedEventRepository', [ '@App\Twitter\Infrastructure\Curation\Repository\ListsBatchCollectedEventRepository' ] ]

    App\Twitter\Infrastructure\Amqp\ResourceProcessor\MemberIdentityProcessor:
        class: 'App\Twitter\Infrastructure\Amqp\ResourceProcessor\MemberIdentityProcessor'
        arguments:
            - '@messenger.default_bus'
            - '@App\Twitter\Infrastructure\Http\Client\MemberProfileAwareHttpClient'
            - '@App\Twitter\Infrastructure\Http\Repository\PublishersListRepository'
            - '@logger'

    App\Twitter\Infrastructure\Amqp\ResourceProcessor\PublishersListProcessor:
        class: 'App\Twitter\Infrastructure\Amqp\ResourceProcessor\PublishersListProcessor'
        calls:
            - [ 'setMemberIdentityProcessor',                 [ '@App\Twitter\Infrastructure\Amqp\ResourceProcessor\MemberIdentityProcessor'] ]
            - [ 'setMemberProfileCollectedEventRepository',   [ '@App\Twitter\Infrastructure\Curation\Repository\MemberProfileCollectedEventRepository'] ]
            - [ 'setPublishersListCollectedEventRepository', [ '@App\Twitter\Infrastructure\Curation\Repository\TwitterListCollectedEventRepository'] ]
            - [ 'setTokenChange',                             [ '@App\Twitter\Infrastructure\Http\AccessToken\TokenChange'] ]
        arguments:
            - '@App\Twitter\Domain\Http\Client\HttpClientInterface'
            - '@App\Twitter\Infrastructure\Translation\Translator'
            - '@logger'

    App\Twitter\Infrastructure\Http\UnavailableResourceHandler:
        class: 'App\Twitter\Infrastructure\Http\UnavailableResourceHandler'
        arguments:
            - '@user_manager'
            - '@logger'

    App\Twitter\Infrastructure\Repository\Status\TaggedStatusRepository:
        class: 'App\Twitter\Infrastructure\Repository\Status\TaggedStatusRepository'
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@logger'
        calls:
            - [ 'setStatusRepository', [ '@App\Twitter\Domain\Publication\Repository\StatusRepositoryInterface' ] ]

    App\Twitter\Infrastructure\Http\Client\HttpClient:
        class: 'App\Twitter\Infrastructure\Http\Client\HttpClient'
        arguments:
            - '%app.twitter_api.consumer_key%'
            - '%app.twitter_api.consumer_secret%'
            - '%app.twitter.oauth_token.default%'
            - '%app.twitter.oauth_secret.default%'
            - '@App\Twitter\Domain\Http\AccessToken\Repository\TokenRepositoryInterface'
            - '@monolog.logger.twitter_api'
        properties:
            environment:            '%kernel.environment%'
            tweetAwareHttpClient:   '@App\Twitter\Infrastructure\Http\Client\TweetAwareHttpClient'
            twitterApiLogger:       '@monolog.logger.twitter_api'
        calls:
            - [ 'setConsumerKey', [ '%app.twitter_api.consumer_key%' ] ]
            - [ 'setConsumerSecret', [ '%app.twitter_api.consumer_secret%' ] ]
            - [ 'setMemberRepository', [ '@user_manager' ] ]
            - [ 'setRateLimitCompliance', [ '@App\Twitter\Infrastructure\Http\Compliance\RateLimitCompliance' ] ]
            - [ 'setTranslator', [ '@App\Twitter\Infrastructure\Translation\Translator' ] ]
            - [ 'setAccessToken', [ '%app.twitter.oauth_token.default%' ] ]
            - [ 'setAccessTokenSecret', [ '%app.twitter.oauth_secret.default%' ] ]

    App\Twitter\Domain\Http\Client\HttpClientInterface: '@App\Twitter\Infrastructure\Http\Client\HttpClient'

    App\Twitter\Infrastructure\Http\Client\TweetAwareHttpClient:
        class: 'App\Twitter\Infrastructure\Http\Client\TweetAwareHttpClient'
        properties:
            archivedStatusRepository:   '@App\Twitter\Infrastructure\Http\Repository\ArchivedStatusRepository'
            entityManager:              '@doctrine.orm.entity_manager'
            notFoundStatusRepository:   '@repository.not_found_status'
        calls:
            - [ 'setHttpClient',                               [ '@App\Twitter\Infrastructure\Http\Client\HttpClient' ] ]
            - [ 'setLogger',                                    [ '@logger' ] ]
            - [ 'setMemberRepository',                          [ '@App\Membership\Infrastructure\Repository\MemberRepository' ] ]
            - [ 'setMemberProfileCollectedEventRepository',     [ '@App\Twitter\Infrastructure\Curation\Repository\MemberProfileCollectedEventRepository' ] ]
            - [ 'setPublicationPersistence',                    [ '@App\Twitter\Infrastructure\Publication\Persistence\PublicationPersistence' ] ]
            - [ 'setStatusRepository',                          [ '@App\Twitter\Infrastructure\Http\Repository\StatusRepository' ] ]
            - [ 'setPublicationBatchCollectedEventRepository',  [ '@App\Twitter\Infrastructure\Curation\Repository\TweetsBatchCollectedEventRepository' ] ]
        public: true

    App\Twitter\Domain\Http\Client\TweetAwareHttpClientInterface: '@App\Twitter\Infrastructure\Http\Client\TweetAwareHttpClient'

    app.event_subscriber.console:
        class: 'App\Twitter\Infrastructure\Console\EventSubscriber\ConsoleEventsSubscriber'
        properties:
            logger: '@logger'
        tags:
            - { name: 'kernel.event_subscriber' }

    App\Twitter\Infrastructure\Http\Compliance\RateLimitCompliance:
        class: 'App\Twitter\Infrastructure\Http\Compliance\RateLimitCompliance'
        arguments:
            - '@?logger'

    App\Twitter\Infrastructure\Collector\TweetCurator:
        class: 'App\Twitter\Infrastructure\Collector\TweetCurator'
        calls:
            - [ 'setHttpClient',                               [ '@App\Twitter\Infrastructure\Http\Client\HttpClient' ] ]
            - [ 'setInterruptibleCurator',                      [ '@App\Twitter\Infrastructure\Collector\InterruptibleCurator' ] ]
            - [ 'setLogger',                                    [ '@monolog.logger.twitter_api' ] ]
            - [ 'setMemberProfileCollectedEventRepository',     [ '@App\Twitter\Infrastructure\Curation\Repository\MemberProfileCollectedEventRepository' ] ]
            - [ 'setMemberRepository',                          [ '@App\Membership\Infrastructure\Repository\MemberRepository' ] ]
            - [ 'setRateLimitCompliance',                                 [ '@App\Twitter\Infrastructure\Http\Compliance\RateLimitCompliance' ] ]
            - [ 'setPublicationBatchCollectedEventRepository',  [ '@App\Twitter\Infrastructure\Curation\Repository\TweetsBatchCollectedEventRepository' ] ]
            - [ 'setPublishersListRepository',                  [ '@App\Twitter\Infrastructure\Http\Repository\PublishersListRepository' ] ]
            - [ 'setPublicationPersistence',                    [ '@App\Twitter\Infrastructure\Publication\Persistence\PublicationPersistence' ] ]
            - [ 'setStatusLogger',                              [ '@App\Twitter\Infrastructure\Log\StatusLogger' ] ]
            - [ 'setTweetAwareHttpClient',                            [ '@App\Twitter\Infrastructure\Http\Client\TweetAwareHttpClient' ] ]
            - [ 'setStatusRepository',                          [ '@App\Twitter\Infrastructure\Http\Repository\StatusRepository' ] ]
            - [ 'setStatusPersistence',                         [ '@App\Twitter\Infrastructure\Publication\Persistence\StatusPersistence' ] ]
            - [ 'setTokenRepository',                           [ '@App\Twitter\Domain\Http\AccessToken\Repository\TokenRepositoryInterface' ] ]
            - [ 'setTranslator',                                [ '@App\Twitter\Infrastructure\Translation\Translator' ] ]
            - [ 'setWhispererIdentification',                   [ '@App\Twitter\Infrastructure\Identification\WhispererIdentification' ] ]
            - [ 'setWhispererRepository',                       [ '@repository.whisperer' ] ]
        properties:
            twitterApiLogger:                                   '@monolog.logger.twitter_api'

    App\Twitter\Infrastructure\Translation\Translator:
        class: 'App\Twitter\Infrastructure\Translation\Translator'
        arguments:
            - '@translator'
            - '@logger'
